<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mybatis.mapper.Users">

	<select id = "selectUsersCnt" resultType="Integer">
		select count(*) from users
	</select>
	
	<select id ="selectUserByUserId" parameterType = "String" resultType="Users">
		select * from users where user_id = #{userId}
	</select>
	<insert id = "insertUser" parameterType = "Users">
		insert into users(user_id, password, password2, user_name, tel, email, birth, grade, question, answer) 
		values (#{userId}, #{password}, #{password2}, #{userName}, #{tel}, #{email}, #{birth}, #{grade}, #{question}, #{answer})
	</insert>
	
	<select id = "loginUser" parameterType = "Users" resultType="Users">
		select * from users 
		where user_id = #{userId} and password = #{password}
	</select>
	
	<select id = "countByUserId" parameterType = "String" resultType = "Integer">
		select count(*) from users where user_id = #{userId}
	</select>
	
	<select id = "selectUserIdByMemberId" parameterType = "Integer" resultType = "String">
		select user_id from users where member_id = #{memberId}
	</select>
	
	<update id = "updateUser" parameterType = "Users">
		update users set 
		user_name=#{userName},
		tel=#{tel},
		email=#{email},
		birth=#{birth},
		question=#{question},
		answer=#{answer}
		where user_id= #{userId}
	</update>
	
	<update id = "updatePassUser" parameterType = "Users">
		update users set 
		password=#{password},
		password2=#{password2}
		where user_id= #{userId}
	</update>
	
	<delete id = "deleteUser" parameterType = "Users">
		delete from users where user_id =#{userId}
	</delete>
	
	<select id="selectUserByBirthAndEmail" parameterType = "Users" resultType = "Users">
		select * from users where email=#{email} and birth=#{birth}
	</select>
	
	<select id="selectUserByIdAndAnswer" parameterType = "Users" resultType = "Users">
		select * from users where user_id=#{userId} and answer=#{answer}
	</select>
	
	<!-- <mapper namespace="com.andy.mybatis.hr.mapper.RegionMapper"> -->
	<!-- <insert id = "insertDept" parameterType = "Department">
		insert into departments(department_id, department_name,manager_id,location_id) 
		values (#{departmentId}, #{departmentName}, #{managerId}, #{locationId})
	</insert>
	
	<update id = "updateDept" parameterType = "Department">
		update departments set department_name=#{departmentName}, manager_id=#{managerId}, location_id=#{locationId} where department_id=#{departmentId}
	</update>
	
	<delete id = "deleteDept" parameterType = "Integer">
		delete from departments where department_id =#{departmentId}
	</delete>
	
	<select id = "selectDeptCnt" resultType="Integer">
		select count(*) from departments
	</select>
	
	<select id = "selectDeptById" parameterType="Integer" resultType="Map">
		select * from departments where department_id = #{departmentId}
	</select>

	<select id = "selectODeptById" parameterType="Integer" resultType="Department">
		select * from departments where department_id = #{departmentId}
	</select>
	
	<select id = "selectLocationByLId" parameterType="Integer" resultType="Integer">
		select count(*) from departments where location_id = #{locationId}
	</select>
	
	<select id = "selectAllByLid" parameterType="Integer" resultType="Department">
		select * from departments where location_id = #{locationId}
	</select>
	
	<select id = "selectAll" resultType = "Department">
		select * from departments
	</select>
	
	<select id = "selectByMId" resultType = "Department">
		select * from departments where manager_id = #{managerId}
	</select>
	
	<select id = "DepartmentByIdWithEmployees" parameterType="Integer" resultMap ="DepartmentMap">
		select * from departments join employees using (department_id) where department_id=#{departmentId}
	</select> 
	
	   <resultMap type = "Department" id = "DepartmentMap">
		<id column = "department_id" jdbcType = "INTEGER" property = "departmentId"/>
		<result column = "department_name" jdbcType = "VARCHAR" property = "departmentName"/>
		<result column = "manager_id" jdbcType = "INTEGER" property = "managerId"/>
		<result column = "location_id" jdbcType = "INTEGER" property = "locationId"/>
		<collection property = "employees" ofType = "Employee">
			<id column = "employee_id" property = "employeeId" />
			region의 아이디 셋팅하기....보고싶다면..
			<result column = "region_id" property = "regionId" />
			<result column = "first_name" property = "firstName" />
			<result column = "last_name" property = "lastName" />
		</collection>
	</resultMap>
	 -->
	

	
	
</mapper>